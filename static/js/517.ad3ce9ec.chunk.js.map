{"version":3,"file":"static/js/517.ad3ce9ec.chunk.js","mappings":"+SAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAe,mCAAG,oGACNF,EAAAA,EAAAA,IAAA,oCAAuCC,IADjC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKfC,EAAqB,mCAAG,WAAMC,GAAN,uFACZN,EAAAA,EAAAA,IAAA,gCACIC,EADJ,iCACoCK,EADpC,gCADY,cAC7BH,EAD6B,yBAI5BA,EAASC,MAJmB,2CAAH,sDAOrBG,EAAgB,mCAAG,WAAMC,GAAN,uFACPR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oBACQP,EADR,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBK,EAAgB,mCAAG,WAAMD,GAAN,uFACPR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACgBP,EADhB,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBM,EAAmB,mCAAG,WAAMF,GAAN,uFACVR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACgBP,EADhB,2BADU,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qD,+HC/BnBO,E,OAAoBC,GAAAA,GAAH,+N,SCEjBC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,+BACE,SAACH,EAAD,UACGG,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,cAAGC,UAAU,SAAb,UACE,oCAAYF,QAEd,uBAAIC,MAJGF,EAOZ,OAIR,E,kBCaD,EA7BgB,WACd,IAAQA,GAAOI,EAAAA,EAAAA,MAAPJ,GACR,GAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CAEA,IAAMQ,EAAiB,mCAAG,WAAMR,GAAN,mGAEIN,EAAAA,EAAAA,IAAoBM,GAFxB,gBAEdS,EAFc,EAEdA,QACRH,EAAWG,GAHW,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,sDAQvBH,EAAkBR,EAVH,CAWhB,GAAE,CAACA,KAGF,yBACGF,EAAQc,OAAS,GAChB,SAACf,EAAD,CAAaC,QAASA,KAEtB,qDAIP,C","sources":["components/services/MoviesAPI.js","components/ReviewsList/ReviewsListStyled.js","components/ReviewsList/ReviewsList.jsx","pages/Reviews.jsx"],"sourcesContent":["//https://www.themoviedb.org/\n// https://api.themoviedb.org/3/movie/550?api_key=c0fd7f1f5a63b2392c8262dd03548818\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst api_key = 'c0fd7f1f5a63b2392c8262dd03548818';\n\nexport const requestTrending = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const requestMoviesBySearch = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${api_key}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const requestMovieById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${api_key}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const ReviewsListStyled = styled.ul`\n  & li {\n    margin-bottom: 25px;\n    padding: 15px;\n    border: 1px solid #f5f5f5;\n    border-radius: 5px;\n    background-color: #f5f5f54d;\n  }\n\n  & .author {\n    margin-bottom: 7px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ReviewsListStyled } from './ReviewsListStyled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <>\n      <ReviewsListStyled>\n        {reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <p className=\"author\">\n                <b>Author: {author}</b>\n              </p>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ReviewsListStyled>\n    </>\n  );\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { ReviewsList } from 'components/ReviewsList/ReviewsList';\nimport { requestMovieReviews } from 'components/services/MoviesAPI';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!id) return;\n\n    const fetchMovieReviews = async id => {\n      try {\n        const { results } = await requestMovieReviews(id);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovieReviews(id);\n  }, [id]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ReviewsList reviews={reviews} />\n      ) : (\n        <p>No reviews for this film</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","api_key","requestTrending","response","data","requestMoviesBySearch","query","requestMovieById","movieId","requestMovieCast","requestMovieReviews","ReviewsListStyled","styled","ReviewsList","reviews","map","id","author","content","className","useParams","useState","setReviews","useEffect","fetchMovieReviews","results","console","log","length"],"sourceRoot":""}