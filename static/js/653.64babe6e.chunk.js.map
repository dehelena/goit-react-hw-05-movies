{"version":3,"file":"static/js/653.64babe6e.chunk.js","mappings":"+SAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAe,mCAAG,oGACNF,EAAAA,EAAAA,IAAA,oCAAuCC,IADjC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKfC,EAAqB,mCAAG,WAAMC,GAAN,uFACZN,EAAAA,EAAAA,IAAA,gCACIC,EADJ,iCACoCK,EADpC,gCADY,cAC7BH,EAD6B,yBAI5BA,EAASC,MAJmB,2CAAH,sDAOrBG,EAAgB,mCAAG,WAAMC,GAAN,uFACPR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oBACQP,EADR,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBK,EAAgB,mCAAG,WAAMD,GAAN,uFACPR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACgBP,EADhB,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBM,EAAmB,mCAAG,WAAMF,GAAN,uFACVR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACgBP,EADhB,2BADU,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qD,+HC/BnBO,E,OAAiBC,GAAAA,GAAH,gS,SCEdC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAIzB,OACE,+BACE,SAACH,EAAD,UACGG,EAAKC,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC5C,OACE,2BACE,gBACEC,IACEH,EAAY,8CAC+BA,GAXzD,mJAcYI,IAAKH,KAEP,4BACE,wBACE,uBAAIA,MAELC,GAAY,uCAAeA,EAAf,OAAiC,QAbzCH,EAiBZ,OAIR,E,kBCAD,EA7Ba,WACX,IAAQA,GAAOM,EAAAA,EAAAA,MAAPN,GACR,GAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOT,EAAP,KAAaU,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CAEA,IAAMU,EAAS,mCAAG,WAAMV,GAAN,mGAESP,EAAAA,EAAAA,IAAiBO,GAF1B,gBAENF,EAFM,EAENA,KACRU,EAAQV,GAHM,gDAKda,QAAQC,IAAR,MALc,yDAAH,sDAQfF,EAAUV,EAVK,CAWhB,GAAE,CAACA,KAGF,yBACGF,EAAKe,OAAS,GACb,SAAChB,EAAD,CAAUC,KAAMA,KAEhB,gEAIP,C","sources":["components/services/MoviesAPI.js","components/CastList/CastListStyled.js","components/CastList/CastList.jsx","pages/Cast.jsx"],"sourcesContent":["//https://www.themoviedb.org/\n// https://api.themoviedb.org/3/movie/550?api_key=c0fd7f1f5a63b2392c8262dd03548818\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst api_key = 'c0fd7f1f5a63b2392c8262dd03548818';\n\nexport const requestTrending = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const requestMoviesBySearch = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${api_key}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const requestMovieById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${api_key}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const CastListStyled = styled.ul`\n  display: flex;\n  gap: 15px;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n\n  & li {\n    flex-basis: 230px;\n    border: 1px solid #c0c1c2;\n    border-radius: 5px;\n  }\n\n  & img {\n    object-fit: cover;\n  }\n\n  & div {\n    padding: 10px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CastListStyled } from './CastListStyled';\n\nexport const CastList = ({ cast }) => {\n  const defaultImg =\n    'https://us.123rf.com/450wm/mathier/mathier1905/mathier190500002/134557216-no-thumbnail-image-placeholder-for-forums-blogs-and-websites.jpg?ver=6';\n\n  return (\n    <>\n      <CastListStyled>\n        {cast.map(({ id, profile_path, original_name, character }) => {\n          return (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/original/${profile_path}`\n                    : defaultImg\n                }\n                alt={original_name}\n              />\n              <div>\n                <p>\n                  <b>{original_name}</b>\n                </p>\n                {character ? <p>Character: {character} </p> : ''}\n              </div>\n            </li>\n          );\n        })}\n      </CastListStyled>\n    </>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string.isRequired,\n      original_name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { CastList } from 'components/CastList/CastList';\nimport { requestMovieCast } from 'components/services/MoviesAPI';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (!id) return;\n\n    const fetchCast = async id => {\n      try {\n        const { cast } = await requestMovieCast(id);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCast(id);\n  }, [id]);\n\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <CastList cast={cast} />\n      ) : (\n        <p>No info for the cast for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","api_key","requestTrending","response","data","requestMoviesBySearch","query","requestMovieById","movieId","requestMovieCast","requestMovieReviews","CastListStyled","styled","CastList","cast","map","id","profile_path","original_name","character","src","alt","useParams","useState","setCast","useEffect","fetchCast","console","log","length"],"sourceRoot":""}