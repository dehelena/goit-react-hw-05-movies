{"version":3,"file":"static/js/203.6b62d93d.chunk.js","mappings":"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","sources":["components/services/MoviesAPI.js","components/MovieCard/MovieCardStyled.js","components/MovieCard/MovieCard.jsx","components/BackLink/BackLinkStyled.js","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["//https://www.themoviedb.org/\n// https://api.themoviedb.org/3/movie/550?api_key=c0fd7f1f5a63b2392c8262dd03548818\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst api_key = 'c0fd7f1f5a63b2392c8262dd03548818';\n\nexport const requestTrending = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const requestMoviesBySearch = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${api_key}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const requestMovieById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${api_key}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const MovieCardStyled = styled.div`\n  display: flex;\n  gap: 15px;\n\n  & .wrapper {\n    padding: 0 15px;\n  }\n\n  & h2 {\n    margin-bottom: 30px;\n    font-size: 30px;\n    line-height: 1.8;\n  }\n  & p {\n    margin-bottom: 20px;\n    font-size: 20px;\n    line-height: 1.67;\n  }\n\n  & b {\n    font-size: 20px;\n  }\n`;\n\nexport const AddInfoStyled = styled.div`\n  margin-top: 40px;\n  margin-bottom: 30px;\n  text-align: center;\n\n  & h3 {\n    margin-bottom: 10px;\n    font-size: 25px;\n  }\n\n  & ul {\n    display: flex;\n    gap: 10px;\n    justify-content: center;\n    line-height: 1.67;\n  }\n\n  & li {\n    padding: 8px 10px;\n    font-size: 20px;\n  }\n\n  & a {\n    text-decoration: none;\n    padding: 8px 10px;\n    border-radius: 3px;\n    color: #000;\n    transition: background-color 200ms linear;\n  }\n\n  & a:hover {\n    background-color: #f7f1e5;\n  }\n`;\n","import React from 'react';\nimport { NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { AddInfoStyled, MovieCardStyled } from './MovieCardStyled';\n\nconst MovieCard = ({ movie }) => {\n  const { title, poster_path, genres, release_date, overview, vote_average } =\n    movie;\n  const defaultImg =\n    'https://us.123rf.com/450wm/mathier/mathier1905/mathier190500002/134557216-no-thumbnail-image-placeholder-for-forums-blogs-and-websites.jpg?ver=6';\n\n  const releaseYear = parseInt(release_date);\n  const location = useLocation();\n\n  return (\n    <>\n      <div>\n        <MovieCardStyled>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\n                : defaultImg\n            }\n            alt={title}\n            width=\"400\"\n          />\n          <div className=\"wrapper\">\n            <h2>\n              {title} ({releaseYear})\n            </h2>\n            <p>User Score: {Math.round(vote_average * 10)}%</p>\n            <b>Overview: </b>\n            <p>{overview}</p>\n            <b>Genres: </b>\n            <p>{genres?.map(genre => genre.name).join(', ')}</p>\n          </div>\n        </MovieCardStyled>\n\n        <div>\n          <AddInfoStyled>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <NavLink state={{ from: location.state?.from }} to=\"cast\">\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink state={{ from: location.state?.from }} to=\"reviews\">\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </AddInfoStyled>\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MovieCard;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst BackLinkStyled = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 20px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  transition: color 300ms linear;\n\n  :hover {\n    color: tomato;\n  }\n`;\n\nexport default BackLinkStyled;\n","import React from 'react';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport BackLinkStyled from './BackLinkStyled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <BackLinkStyled to={to}>\n      <BsArrowLeft size=\"24\" />\n      {children}\n    </BackLinkStyled>\n  );\n};\n\nexport default BackLink;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { requestMovieById } from 'components/services/MoviesAPI';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport BackLink from 'components/BackLink/BackLink';\n\nconst MovieDetails = () => {\n  const { id } = useParams(); // деструктуризація 'id' береться з App шляху до динамічного елементу\n  const [movie, setMovie] = useState('');\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    if (!id) return;\n\n    const fetchMovieById = async id => {\n      try {\n        const result = await requestMovieById(id);\n        setMovie(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieById(id);\n  }, [id]);\n\n  return (\n    <div>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <MovieCard movie={movie} />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","requestTrending","response","data","requestMoviesBySearch","query","requestMovieById","movieId","requestMovieCast","requestMovieReviews","MovieCardStyled","styled","AddInfoStyled","movie","title","poster_path","genres","release_date","overview","vote_average","releaseYear","parseInt","location","useLocation","src","alt","width","className","Math","round","map","genre","name","join","state","from","to","Link","children","size","id","useParams","useState","setMovie","backLinkHref","useEffect","fetchMovieById","result","console","log"],"sourceRoot":""}