{"version":3,"file":"static/js/157.b87c2591.chunk.js","mappings":"6MAEaA,E,OAAkBC,GAAAA,GAAH,sS,SCGfC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAACL,EAAD,UACc,OAAXG,GACCA,EAAOG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACvB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,SACGI,GAASC,KAFLF,EAMZ,OAIV,C,+LCpBDM,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAe,mCAAG,oGACNF,EAAAA,EAAAA,IAAA,oCAAuCC,IADjC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKfC,EAAqB,mCAAG,WAAMC,GAAN,uFACZN,EAAAA,EAAAA,IAAA,gCACIC,EADJ,iCACoCK,EADpC,gCADY,cAC7BH,EAD6B,yBAI5BA,EAASC,MAJmB,2CAAH,sDAOrBG,EAAgB,mCAAG,WAAMC,GAAN,uFACPR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oBACQP,EADR,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBK,EAAgB,mCAAG,WAAMD,GAAN,uFACPR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACgBP,EADhB,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBM,EAAmB,mCAAG,WAAMF,GAAN,uFACVR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACgBP,EADhB,2BADU,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qD,wIC/BnBO,E,OAAkBvB,GAAAA,IAAH,sb,SCEfwB,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOR,EAAP,KAAcS,EAAd,KAiBA,OACE,SAACJ,EAAD,WACE,kBAAMK,UAAU,OAAOH,SAbN,SAAAI,GAGnB,GAFAA,EAAEC,iBAEmB,KAAjBZ,EAAMa,OACR,OAAOC,MAAM,iCAGfP,EAASP,GACTS,EAAS,GACV,EAIG,WACE,kBAAOM,KAAK,OAAOC,MAAOhB,EAAOiB,SAlBb,SAAAN,GACxBF,EAASE,EAAEO,OAAOF,MAAMG,cACzB,KAiBK,mBAAQJ,KAAK,SAASL,UAAU,SAAhC,wBAMP,E,iBCMD,EAhCe,WACb,OAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOxB,EAAP,KAAeoC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMvB,EAAQsB,EAAaE,IAAI,UAG/BC,EAAAA,EAAAA,YAAU,WACR,GAAKzB,EAAL,CAEA,IAAM0B,EAAmB,mCAAG,WAAM1B,GAAN,mGAEED,EAAAA,EAAAA,IAAsBC,GAFxB,gBAEhB2B,EAFgB,EAEhBA,QACRP,EAAUO,GAHc,gDAKxBC,QAAQC,IAAR,MALwB,yDAAH,sDAQzBH,EAAoB1B,EAVF,CAWnB,GAAE,CAACA,IAMJ,OACE,4BACE,SAACM,EAAD,CAAWC,SANe,SAAAP,GAC5BuB,EAAgB,CAAEvB,MAAAA,GACnB,IAKIhB,EAAO8C,OAAS,IAAK,SAAC/C,EAAA,EAAD,CAAYC,OAAQA,MAG/C,C","sources":["components/MoviesList/MoviesListStyled.js","components/MoviesList/MoviesList.jsx","components/services/MoviesAPI.js","components/Searchbar/SearchbarStyled.js","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieListStyled = styled.ul`\n  margin-top: 30px;\n  font-size: 20px;\n  line-height: 1.6;\n\n  & a {\n    text-decoration: none;\n    color: #000;\n    padding: 5px;\n    border-radius: 3px;\n    transition: background-color 300ms linear;\n  }\n\n  & a:hover {\n    background-color: #f7f1e5;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MovieListStyled } from './MoviesListStyled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <MovieListStyled>\n        {movies !== null &&\n          movies.map(({ id, title, name }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title || name}\n                </Link>\n              </li>\n            );\n          })}\n      </MovieListStyled>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","//https://www.themoviedb.org/\n// https://api.themoviedb.org/3/movie/550?api_key=c0fd7f1f5a63b2392c8262dd03548818\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst api_key = 'c0fd7f1f5a63b2392c8262dd03548818';\n\nexport const requestTrending = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const requestMoviesBySearch = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${api_key}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const requestMovieById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${api_key}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const SearchbarStyled = styled.div`\n  & form {\n    height: 30px;\n  }\n\n  & input {\n    height: 100%;\n    width: 230px;\n  }\n\n  & button {\n    height: 100%;\n    min-width: 100px;\n    border: 1px solid transparent;\n    border-radius: 3px;\n    background-color: #f7f1e5;\n    text-transform: uppercase;\n    font-weight: 500px;\n    transition: background-color 300ms linear;\n  }\n\n  & button:hover {\n    background-color: #ffbfa9;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchbarStyled } from './SearchbarStyled';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      return alert('Please enter search parameter');\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <SearchbarStyled>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input type=\"text\" value={query} onChange={handleQueryChange} />\n        <button type=\"submit\" className=\"button\">\n          Search\n        </button>\n      </form>\n    </SearchbarStyled>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport React, { useState, useEffect } from 'react';\nimport { requestMoviesBySearch } from 'components/services/MoviesAPI';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query'); //отримуємо конкретне значення з параметру пошуку за ключовим словом\n  // console.log(query);\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchSearchedMovies = async query => {\n      try {\n        const { results } = await requestMoviesBySearch(query);\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchSearchedMovies(query);\n  }, [query]);\n\n  const handleSearchbarSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleSearchbarSubmit} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieListStyled","styled","MoviesList","movies","location","useLocation","map","id","title","name","to","state","from","axios","api_key","requestTrending","response","data","requestMoviesBySearch","query","requestMovieById","movieId","requestMovieCast","requestMovieReviews","SearchbarStyled","Searchbar","onSubmit","useState","setQuery","className","e","preventDefault","trim","alert","type","value","onChange","target","toLowerCase","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearchedMovies","results","console","log","length"],"sourceRoot":""}